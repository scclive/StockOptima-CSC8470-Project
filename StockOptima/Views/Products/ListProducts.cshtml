@using StockOptima.Utils.Formatting
@using StockOptima.Models.Database
@using System.Globalization
@model StockOptima.Operations.ProductsListOperation

@{
    ViewBag.Title = "Products Management";
    ViewBag.PreviousPage = "";
    Layout = "_Layout";
}

<div class="container mt-5">
    <h3 class="mb-4 text-center">Products Management</h3>

    <div class="input-group mb-4">
        <input type="text" class="form-control" placeholder="Search" value="@(Model.Query)" id="searchBar">
        <button class="btn btn-secondary" type="button" id="searchButton" onclick="searchClick()">
            <span uk-icon="icon: search; ratio: 1.1"></span>
        </button>
        <button class="btn btn-secondary" type="button" id="clearButton" onclick="clearClick()">
            <span uk-icon="icon: close; ratio: 1.1"></span>
        </button>
    </div>

    <div class="d-flex justify-content-end mb-4">
        <a asp-controller="Products" asp-action="AddProductForm">
            <button class="btn btn-primary">Add Product</button>
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover" id="productsTable">
            <colgroup>
                <col span="1" style="width: 6%">
                <col span="1" style="width: 25%">
                <col span="1" style="width: auto">
                <col span="1" style="width: 10%">
                <col span="1" style="width: 10%">
                <col span="1" style="width: 10%">
            </colgroup>
            <thead class="thead-dark">
                <tr id="tableHeaderRow">
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Id</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(0)"></span>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Name</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(1)"></span>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Desc</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(2)"></span>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Quant.</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(3)"></span>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Cost</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(4)"></span>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex align-items-center justify-content-between">
                            <span>Sell Price</span>
                            <span class="ml-auto cur-pointer" onclick="changeOrder(5)"></span>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="tableContent">
                @foreach (var product in Model.Products)
                {
                    <tr>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.Id</a>
                        </td>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.Name</a>
                        </td>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.Description.CutAfter(40)</a>
                        </td>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.AvailableQuantity</a>
                        </td>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.Cost.ToString(CultureInfo.InvariantCulture)</a>
                        </td>
                        <td>
                            <a class="normal-text-link" href="/products/edit/@product.Id">@product.SellPrice.ToString(CultureInfo.InvariantCulture)</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        const searchBar = document.getElementById("searchBar");
        const searchButton = document.getElementById("searchButton");
        const clearButton = document.getElementById("clearButton");
        const tableHeaderRow = document.getElementById("tableHeaderRow");
        const tableHeaderOrderButtons = Array.from(tableHeaderRow.children).map(o => o.children[0].children[1]);
        tableHeaderOrderButtons.forEach(o => defaultIcon(o));
        const tableContent = document.getElementById("tableContent");

        let currentOrder = 0;
        let orderReversed = true;
        changeOrder(0);

        function searchClick() {
            let value = searchBar.value;
            if (!value) return;
            window.location.assign("/products?q=" + value);
        }

        function clearClick() {
            window.location.assign("/products");
        }

        function changeOrder(num) {
            if (num === currentOrder) {
                orderReversed = !orderReversed;
            } else {
                defaultIcon(tableHeaderOrderButtons[currentOrder]);
                currentOrder = num;
            }

            let button = tableHeaderOrderButtons[num];

            button.setAttribute("uk-icon", "ratio: 0.7; icon: " + (orderReversed ? "chevron-down" : "chevron-up"));
            button.style.opacity = "100%";

            let children = Array.from(tableContent.children);

            children.sort((a, b) => {
                let result;

                let propA = a.children[num].children[0].children[0].innerText;
                let propB = b.children[num].children[0].children[0].innerText;

                let numA = Number.parseFloat(propA);
                if (isNaN(numA)) {
                    result = propA.localeCompare(propB);
                } else {
                    let numB = Number.parseFloat(propB);
                    result = numA - numB;
                }

                if (orderReversed) result *= -1;
                return result;
            });

            for (let i = 0; i < children.length; i++) {
                tableContent.removeChild(children[i]);
                tableContent.appendChild(children[i]);
            }
        }

        function defaultIcon(element) {
            element.setAttribute("uk-icon", "ratio: 0.7; icon: minus");
            element.style.opacity = "50%";
        }
    </script>
}
