#pragma checksum "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "1a9cff9730ffb74a72c7c27691c2bd9d1cb18b51ac6320eb8b3bb851bed6cb3d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sales_SalesMenu), @"mvc.1.0.view", @"/Views/Sales/SalesMenu.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\_ViewImports.cshtml"
using StockOptima

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\_ViewImports.cshtml"
using StockOptima.Models

#nullable disable
    ;
#nullable restore
#line 1 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
 using StockOptima.Utils.Formatting

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
 using StockOptima.Services.Database

#nullable disable
    ;
#nullable restore
#line 3 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
 using StockOptima.Models.Database

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"1a9cff9730ffb74a72c7c27691c2bd9d1cb18b51ac6320eb8b3bb851bed6cb3d", @"/Views/Sales/SalesMenu.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"c33ef2b6517d892f6f972773faae9fd196838fb4bb9b5a4832c2b26cba2f7c07", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Sales_SalesMenu : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("normal-text-link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 8 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
  
    ViewBag.Title = "Sales Menu";
    ViewBag.PreviousPage = "";
    Layout = "_Layout";

#line default
#line hidden
#nullable disable

            WriteLiteral(@"
<div>
    <div class=""card-deck"">
        <div class=""card card-fixed-width"">
            <div class=""card-body"">
                <h5 class=""card-subtitle"">Id</h5>
                <div class=""display-horizontal"">
                    <input id=""idInput"" min=""0""");
            BeginWriteAttribute("max", " max=\"", 584, "\"", 603, 1);
            WriteAttributeValue("", 590, 
#nullable restore
#line 20 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                      int.MaxValue

#line default
#line hidden
#nullable disable
            , 590, 13, false);
            EndWriteAttribute();
            WriteLiteral(@" type=""number"" style=""width: 8rem""/>
                    <button class=""btn-secondary btn-icon"" type=""button"" data-toggle=""modal"" data-target=""#searchModal"">
                        <span uk-icon=""icon: search; ratio: 1.1""></span>
                    </button>
                </div>
            </div>
        </div>

        <div class=""card card-fixed-width"">
            <div class=""card-body"">
                <h5 class=""card-subtitle"">Quantity</h5>
                <input id=""quantityInput"" value=""1"" type=""number""/>
            </div>
        </div>

    </div>
    <div style=""margin-top: 5px"">
        <button class=""btn-secondary"" id=""btnAddProduct"">Add Item</button>
        <button class=""btn-secondary"" id=""btnClear"">Clear</button>
    </div>
</div>

<div id=""searchModal"" class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-labelledby=""searchModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
              ");
            WriteLiteral(@"  <h5 class=""modal-title"" id=""searchModalLabel"">Searching</h5>
            </div>

            <div class=""modal-body"">
                <input type=""text"" id=""searchModalInput"">

                <div class=""table-wrapper"">
                    <table class=""table"" id=""searchModalTable"">
                        <colgroup>
                            <col span=""1"" style=""width: 30%"">
                            <col span=""1"" style=""width: auto"">
                        </colgroup>

                        <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                        </tr>
                        </thead>

                        <tbody id=""searchModalTableBody"">
");
#nullable restore
#line 67 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                         foreach (Product product in _productsService.GetAll().Where(o => o.AvailableQuantity > 0))
                        {

#line default
#line hidden
#nullable disable

            WriteLiteral("                            <tr>\n                                <td>\n                                    <div class=\"table-select-id\" data-name=\"");
            Write(
#nullable restore
#line 71 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                             product.Name.ToLower()

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\" data-id=\"");
            Write(
#nullable restore
#line 71 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                                                               product.Id

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\">\n                                        ");
            Write(
#nullable restore
#line 72 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                         product.Name.CutAfter(20)

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\n                                    </div>\n                                </td>\n                                <td>\n                                    <div class=\"table-select-id\" data-id=\"");
            Write(
#nullable restore
#line 76 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                           product.Id

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\">\n                                        ");
            Write(
#nullable restore
#line 77 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                         product.Description.CutAfter(30)

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\n                                    </div>\n                                </td>\n                            </tr>\n");
#nullable restore
#line 81 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                        }

#line default
#line hidden
#nullable disable

            WriteLiteral(@"                        </tbody>
                    </table>
                </div>

            </div>

            <div class=""modal-footer"">
                <button id=""searchModalClose"" type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

<div class=""table-wrapper table-items-wrapper"">
    <table class=""table table-bordered"" id=""productsTable"">
        <colgroup>
            <col span=""1"" style=""width: 10%""/>
            <col span=""1"" style=""width: 10%""/>
            <col span=""1"" style=""width: 70%""/>
            <col span=""1"" style=""width: 10%""/>
            <col span=""1"" style=""width: 0.4rem""/>
        </colgroup>

        <thead>
        <tr class=""table-header"">
            <th>Id</th>
            <th>Quant.</th>
            <th>Name</th>
            <th>Price</th>
            <th></th>
        </tr>
        </thead>

        <tbody id=""productsTableBody"">

        </tbody>
    </table>
</div>

<div class=""card-deck"">
    <di");
            WriteLiteral("v class=\"card card-fixed-width\">\n        <div class=\"card-body\">\n            <h5 class=\"card-subtitle\">Payment name</h5>\n            <select id=\"paymentMethodInput\" style=\"height: 30px\">\n");
#nullable restore
#line 126 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                 foreach (PaymentMethod paymentMethod in _paymentMethodsService.GetAll())
                {

#line default
#line hidden
#nullable disable

            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1a9cff9730ffb74a72c7c27691c2bd9d1cb18b51ac6320eb8b3bb851bed6cb3d13699", async() => {
                Write(
#nullable restore
#line 128 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                       paymentMethod.Name

#line default
#line hidden
#nullable disable
                );
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            WriteLiteral(
#nullable restore
#line 128 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                    paymentMethod.Id

#line default
#line hidden
#nullable disable
            );
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
#nullable restore
#line 129 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                }

#line default
#line hidden
#nullable disable

            WriteLiteral(@"            </select>
        </div>
    </div>

    <div class=""card card-fixed-width"">
        <div class=""card-body"">
            <h5 class=""card-subtitle"">Discount</h5>
            <input id=""discountInput"" type=""text"" value=""0""/>
        </div>
    </div>

    <div class=""card card-fixed-width"">
        <div class=""card-body"">
            <h5 class=""card-subtitle"">Total price</h5>
            <input value=""0"" data-currency=""$"" id=""totalPriceInput"" disabled readonly style=""text-align: end""/>
        </div>
    </div>
</div>

<div style=""margin-top: 5px"">
    <button class=""btn-primary"" id=""btnFinish"">Finish Sale</button>
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1a9cff9730ffb74a72c7c27691c2bd9d1cb18b51ac6320eb8b3bb851bed6cb3d16804", async() => {
                WriteLiteral("\n        <button class=\"btn-primary\">Cancel</button>\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</div>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        const idInput = document.getElementById('idInput');
        const btnClear = document.getElementById('btnClear');
        const btnAddProduct = document.getElementById('btnAddProduct');
        const btnFinish = document.getElementById('btnFinish');
        const quantityInput = document.getElementById('quantityInput');
        const discountInput = document.getElementById('discountInput');
        const paymentMethodInput = document.getElementById('paymentMethodInput');
        const totalPriceInput = document.getElementById('totalPriceInput');
        const searchModalInput = document.getElementById('searchModalInput');
        const searchModalClose = document.getElementById('searchModalClose');
        const productsTableBody = document.getElementById('productsTableBody');
        const searchModalTableBody = document.getElementById('searchModalTableBody');
        let canFinishSell = true;

        btnAddProduct.onclick = () => addProduct(idInput.value, quantityInput.value);
       ");
                WriteLiteral(" btnClear.onclick = clear;\n\n        idInput.oninput = () => restrictValues(idInput, 1, ");
                Write(
#nullable restore
#line 176 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                            int.MaxValue

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(");\n        quantityInput.oninput = () => restrictValues(quantityInput, 1, ");
                Write(
#nullable restore
#line 177 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                        int.MaxValue

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(");\n\n        discountInput.onchange = () => restrictDiscountAndThen(discountInput, ");
                Write(
#nullable restore
#line 179 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                               int.MinValue

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(", ");
                Write(
#nullable restore
#line 179 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                                              int.MaxValue

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@", updateTotalPrice);
        searchModalInput.oninput = function () {
            const query = searchModalInput.value.trim().toLowerCase();

            for (const tableBodyElement of searchModalTableBody.children) {
                if (tableBodyElement.tagName.toLowerCase() === 'tr') {
                    const cellName = tableBodyElement.children[0].children[0].getAttribute('data-name');
                    tableBodyElement.hidden = !cellName.includes(query);
                }
            }
        };
        btnFinish.onclick = function () {
            if (!canFinishSell) return;

            const products = [];
            for (const productsTableElement of productsTableBody.children) {
                const idCell = productsTableElement.children[0];
                const quantityCell = productsTableElement.children[1];
                products.push({Id: Number(idCell.innerHTML), Quantity: Number(quantityCell.innerHTML)});
            }

            if (products.length === 0) return;

            const");
                WriteLiteral(@" saleInfo = {
                products: products,
                discount: discountInput.value,
                method: {Id: Number(paymentMethodInput.value), Name: """"},
            };
            const request = new XMLHttpRequest();
            const json = JSON.stringify(saleInfo);

            request.open('POST', '/sales/sell', true);
            request.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
            canFinishSell = false;
            request.onloadend = function () {
                clear()
                canFinishSell = true;
                if (request.status === 200) {
                    alert('Success');
                    redirectTo('/sales');
                } else alert('Could not complete sale. Error ' + status);
            }

            request.send(json);
        }

        $('.table-select-id').click(function () {
            idInput.value = this.getAttribute('data-id');
            searchModalClose.click();
        });

        function restrictValues(");
                WriteLiteral(@"input, minValue, maxValue) {
            const value = String(input.value).trim();
            if (String(value) === """") return;
            input.value = clamp(value, minValue, maxValue);
        }

        function restrictDiscountAndThen(input, minValue, maxValue, then) {
            let value = String(input.value.trim());
            if (value === """") return;
            if (value.includes('%')) {
                value = value.replace('%', '');
                input.value = String(clamp(Number.parseFloat(value), minValue, maxValue)) + '%';
            } else {
                input.value = String(clamp(Number.parseFloat(value), minValue, maxValue));
            }

            then();
        }

        function clear() {
            productsTableBody.innerHTML = '';
            updateTotalPrice();
        }

        function findRowInTable(id) {
            for (const tableElement of productsTableBody.children) {
                if (tableElement.tagName.toLowerCase() === 'tr') {
                    const ");
                WriteLiteral(@"idCell = tableElement.children[0];
                    if (idCell.innerHTML === id) {
                        return tableElement;
                    }
                }
            }
            return undefined;
        }

        function calcDiscount(totalPrice) {
            let discountString = discountInput.value;
            const discountValue = Number.parseFloat(discountString);
            if (discountString.search('%') !== -1) {
                discountString = discountString.replace('%', '');
                let discountValue = Number.parseFloat(discountString);

                if (!isNaN(discountValue))
                    return totalPrice * discountValue / 100;
            } else {

                if (!isNaN(discountValue))
                    return discountValue;
            }
            return 0;
        }

        function calcTotalPrice() {
            let totalPrice = 0;
            for (const tableElement of productsTableBody.children) {
                if (tableElement.tagName.toLo");
                WriteLiteral(@"werCase() === 'tr') {
                    const quantityCell = tableElement.children[1];
                    const priceCell = tableElement.children[3];
                    totalPrice += Number(priceCell.innerHTML) * Number(quantityCell.innerHTML);
                }
            }
            return totalPrice;
        }

        function updateTotalPrice() {
            let totalPrice = calcTotalPrice();
            totalPrice = clamp(totalPrice - calcDiscount(totalPrice), 0, ");
                Write(
#nullable restore
#line 297 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                                                          int.MaxValue

#line default
#line hidden
#nullable disable
                );
                WriteLiteral(@");

            totalPriceInput.value = totalPriceInput.getAttribute('data-currency') + String(roundTo(totalPrice, 2));
        }

        function addProduct(id, quantity) {
            const idRowInTable = findRowInTable(id);
            const request = getProductRequest(id);

            if (idRowInTable === undefined) {
                request.onloadend = function () {
                    if (request.status !== 200) {
                        alert(""Could not add product. Id "" + id + "" not Found."");
                        return;
                    }

                    const product = request.response;
                    if (product.availableQuantity < quantity) {
                        alert(""Could not add product. Only "" + product.availableQuantity + "" items available."");
                        return;
                    }

                    const row = document.createElement('tr');
                    const cellId = document.createElement('td');
                    cellId.innerHTML = id;

    ");
                WriteLiteral(@"                const cellQuantity = document.createElement('td');
                    cellQuantity.innerHTML = quantity;
                    const clickFunction = function () {
                        console.log('click');
                        const prev = cellQuantity.innerHTML;
                        cellQuantity.innerHTML = '';

                        const input = document.createElement('input');
                        input.value = prev;
                        input.style.width = '5rem';
                        input.type = 'number';

                        input.onchange = function () {
                            const request = getProductRequest(id);
                            request.onloadend = function () {
                                const product = request.response;
                                const availableQuantity = product.availableQuantity;
                                restrictValues(input, 1, availableQuantity);

                                cellQuantity.innerHTML = ");
                WriteLiteral(@"input.value;
                                updateTotalPrice();
                            }
                        }

                        cellQuantity.appendChild(input);
                    };

                    cellQuantity.onclick = () => executeOnDoubleClick(clickFunction);

                    const cellName = document.createElement('td');
                    cellName.innerHTML = product.name;

                    const cellPrice = document.createElement('td');
                    cellPrice.innerHTML = product.sellPrice;

                    const cellDelete = document.createElement('td');
                    const deleteSpan = document.createElement('span');
                    deleteSpan.setAttribute('class', 'delete-list-item');

                    deleteSpan.innerHTML = 'x';
                    deleteSpan.onclick = function () {
                        productsTableBody.removeChild(row);
                        updateTotalPrice();
                    }

                    cellDelete.appen");
                WriteLiteral(@"dChild(deleteSpan);

                    row.appendChild(cellId);
                    row.appendChild(cellQuantity);
                    row.appendChild(cellName);
                    row.appendChild(cellPrice);
                    row.appendChild(cellDelete);
                    productsTableBody.appendChild(row);
                    updateTotalPrice();
                };
            } else {
                request.onloadend = function () {
                    const product = request.response;
                    const cellQuantity = idRowInTable.children[1];
                    const newQuantity = Number(cellQuantity.innerHTML) + Number(quantity);
                    if (product.availableQuantity < newQuantity) {
                        alert(""Could not add product. Only "" + product.availableQuantity + "" items available."");
                        return;
                    }
                    cellQuantity.innerHTML = String(newQuantity);
                    updateTotalPrice();
                }
       ");
                WriteLiteral("     }\n        }\n\n        updateTotalPrice();\n    </script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public 
#nullable restore
#line 6 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
        DatabaseService<Product>

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 6 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                                 _productsService

#line default
#line hidden
#nullable disable
         { get; private set; }
         = default!;
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public 
#nullable restore
#line 5 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
        PaymentMethodsService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 5 "C:\Users\Lynx\Desktop\Assignments\Bilal Hassan Assignments - 5\CSC8470 - Server-side Web Technology\A2\Project\StockOptima-CSC8470-Project\StockOptima\Views\Sales\SalesMenu.cshtml"
                              _paymentMethodsService

#line default
#line hidden
#nullable disable
         { get; private set; }
         = default!;
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
